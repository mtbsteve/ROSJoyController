buildscript {

    ext.kotlin_version = '1.2.71'

    // ---- DEPENDENCIES ----
    // @formatter:off
    ext.buildConfig = [
            compileSdk  : 29,
            targetSdk   : 29,
            minSdk      : 21,
            gradlePlugin: '3.2.1'
    ]

    ext.versions = [
            kotlin          : '1.3.10',
            androidx        : '1.0.0',
            constraintlayout: '1.1.3',
            colorpicker     : '1.0.5',
            junit           : '4.12',
            mockito_kotlin  : '2.0.0',
            mockito_core    : '2.23.4'
    ]

    ext.deps = [
            'androidx'   : [
                    'appCompat'       : "androidx.appcompat:appcompat:${versions.androidx}",
                    'constraintLayout': "androidx.constraintlayout:constraintlayout:${versions.constraintlayout}",
                    'preferences'     : "androidx.preference:preference:${versions.androidx}"
            ],
            'kotlin'     : [
                    'stdlib': [
                            'jdk': "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${versions.kotlin}"
                    ]
            ],
            'butterknife': [
                    //ButterKnife
                    'library'   : "com.jakewharton:butterknife:9.0.0-rc3",
                    'annotation': "com.jakewharton:butterknife-compiler:9.0.0-rc3"
            ],
            'glide'      : [
                    //Glide
                    'library'   : "com.github.bumptech.glide:glide:4.8.0",
                    'annotation': "com.github.bumptech.glide:compiler:4.8.0"
            ],
            'material'   : "com.google.android.material:material:${versions.androidx}",
            'colorpicker': "com.jaredrummler:colorpicker-compat:${versions.colorpicker}",
            'junit'      : "junit:junit:${versions.junit}",
            'mockito'    : [
                    'core'  : "org.mockito:mockito-core:${versions.mockito_core}",
                    'kotlin': "com.nhaarman.mockitokotlin2:mockito-kotlin:${versions.mockito_kotlin}"
            ]
    ]
    // @formatter:on
    String rosMavenPath = System.getenv("ROS_MAVEN_PATH")
    String rosMavenRepository = System.getenv("ROS_MAVEN_REPOSITORY")

    repositories {
        if (rosMavenPath != null) {
            rosMavenPath.tokenize(":").each { path ->
                maven {
                    // We can't use uri() here because we aren't running inside something
                    // that implements the Script interface.
                    url "file:${path}"
                }
            }
        }
        maven {
            url "http://repository.springsource.com/maven/bundles/release"
        }
        maven {
            url "http://repository.springsource.com/maven/bundles/external"
        }
        if (rosMavenRepository != null) {
            maven {
                url rosMavenRepository
            }
        }
        maven {
            url "https://github.com/rosjava/rosjava_mvn_repo/raw/master"
        }
        google()
        jcenter()
    }

    dependencies {
        classpath "com.android.tools.build:gradle:3.2.1"
        classpath "org.ros.rosjava_bootstrap:gradle_plugins:[0.3,0.4)"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${versions.kotlin}"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version" }
}

allprojects {
    repositories {
        google()
        jcenter()

        maven { url 'https://jitpack.io' }
    }

    configurations.all {
        resolutionStrategy {
            eachDependency { details ->
                if (details.requested.group == 'org.jetbrains.kotlin') {
                    details.useVersion versions.kotlin
                }
            }
        }
    }

    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile) {
        kotlinOptions {
            allWarningsAsErrors = true
        }
    }
    //apply from: "https://github.com/rosjava/android_core/raw/kinetic/buildscript.gradle"
}


task clean(type: Delete) {
    delete rootProject.buildDir
}